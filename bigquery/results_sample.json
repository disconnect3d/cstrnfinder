{"repo_name":"redbrain/gccpy","path":"libstdc++-v3/testsuite/25_algorithms/merge/check_type.cc","content":"// Copyright (C) 2005-2013 Free Software Foundation, Inc.\n//\n// This file is part of the GNU ISO C++ Library.  This library is free\n// software; you can redistribute it and/or modify it under the\n// terms of the GNU General Public License as published by the\n// Free Software Foundation; either version 3, or (at your option)\n// any later version.\n\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License along\n// with this library; see the file COPYING3.  If not see\n// \u003chttp://www.gnu.org/licenses/\u003e.\n\n// 25.3.4 [lib.alg.merge]\n\n// { dg-do compile }\n\n#include \u003calgorithm\u003e\n#include \u003ctestsuite_iterators.h\u003e\nusing __gnu_test::input_iterator_wrapper;\nusing __gnu_test::output_iterator_wrapper;\n\nstruct S { };\n\nbool \noperator\u003c(const S\u0026, const S\u0026) {return true;}\n\nstruct X { };\n\nbool \npredicate(const X\u0026, const X\u0026) {return true;}\n\noutput_iterator_wrapper\u003cS\u003e \ntest1(input_iterator_wrapper\u003cS\u003e\u0026 in,\n      output_iterator_wrapper\u003cS\u003e\u0026 out)\n{ return std::merge(in, in, in, in, out); }\n\noutput_iterator_wrapper\u003cX\u003e \ntest2(input_iterator_wrapper\u003cX\u003e\u0026 in,\n      output_iterator_wrapper\u003cX\u003e\u0026 out)\n{ return std::merge(in, in, in, in, out, predicate); }\n","lines":["}\n","};\n","}\n","};\n","}\n","}\n","}\n"]}
